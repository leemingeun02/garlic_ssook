컴퓨터에서 많은 시간을 보낸다면, 결국 당신은 몇몇 작업들을 자동화하기를 원하게 될 것입니다.
예를 들어, 당신은 많은 텍스트 파일들을 검색 및 재배치하거나, rename하거나, 복잡한 방식으로 포토 파일들을 재배열하고자 할 것입니다.
아마도 당신은 작은 커스텀 데이터베이스 혹은 gui 프로그램 혹은 간단한 게임을 작성하고 싶어할 수도 있습니다.

당신이 전문 소프트웨어 개발자라면, 당신은 몇몇 c/c++/java 라이브러리들과 함께 작업해야하지만 일반적인 작성/컴파일/테스트/다시컴파일 과정은 너무 느릴 수 있습니다.
아마도 당신은 이러한 라이브러리의 테스트 스위트를 작성하며 테스트 코드를 작성하는것이 지루하다고 생각할 수 있습니다.
또는 프로그램을 작성했는데 확장 언어가 필요하지만, 해당 애플리케이션을 위해 완전히 새로운 언어를 설계하고 구현하는 것은 피하고 싶을 수도 있습니다.

파이썬이 딱 당신에게 걸맞는 언어입니다.


이러한 작업들을 위해서 유닉스 쉘 스크립트나 윈도우 배치 파일을 작성해야하지만, 쉘 스크립트는 text 데이터를 바꾸고 파일 사이를 돌아다니느데 적합합니다.
gui프로그램이나 게임에 적절하지 못합니다.
당신은 c, c++, java 프로그램을 작성할 수 있겠지만, 프로그램의 초안을 작성하는데 마저도 많은 개발 시간이 필요할 것입니다.
파이썬은 더 사용하기 쉽고, 여러 운영체제에서 사용 가능하며, 당신의 일을 더 빠르게 수행하는데 도움을 줄 수 있습니다.

파이썬은 사용하기 쉽지만, 배치 파일이나 쉘 스킓트가 제공하는 것보다 더 많은 구조, 더 큰 구조의 프로그램을 작성할 수 있는 실제 프로그래밍 언어입니다.
반면에, 파이썬은  c언어보다 더 많은 에러 체크를 수행하며, 고수준 언어로서 고수준 데이터 타입이 내장되어있습니다.(예를 들어 유연한 배열과 딕셔너리 등)

파이썬의 더 범용적인 데이터 타입들이 더 많은 문제 영역에 적용가능하며 쉽다. awk/perl 보다.
파이썬은 프로그램을 여러 모듈로 나누어 작성할 수 있게 해주며, 이 모듈들은 다른 파이썬 프로그램에서도 재사용할 수 있습니다.
또한, 파이썬은 표준 모듈을 대규모로 제공하고 있어, 이 모듈들을 프로그램의 기반으로 활용할 수 있을 뿐만 아니라, 파이썬 프로그래밍을 배우기 위한 예제로도 사용할 수 있습니다.
이러한 모듈 중 일부는 파일 입출력(file I/O), 시스템 호출(system calls), 소켓 통신(sockets), 그리고 Tk와 같은 그래픽 사용자 인터페이스 툴킷과의 인터페이스 등을 제공합니다.

파이썬은 완성과 링킹이 필요하지 않기때문에 개발 기간 중 당신의 상당한 시간을 아낄 수 있게 하는 인터프리티드 언어입니다.

인터프리터는 인터렉티브하게 사용될 수 있습니다.
언어의 특징, 쓰고 버리는 프로그램, 쌓아올리는 개발에서 테스트 함수를 작성하는데
개꿀 책상 계산기이기도 하다.

파이썬은 프로그램이 컴팩트하고 가독성있게 해준다.
파이썬으로 작성된 프로그램들은 c/c++/java 보다 이러한 이유로 더 짧다.
1. 하나의 선언에서 복잡한 기능을 표현하도록 하는 고수준 데이터 타입입.
2. 선언 그루핑이 브라켓말고 들여쓰기로 수행됨.
3. 변수나 인자 정의가 필요하지 않음.

파이썬은 확장적입니다.
c를 사용할 줄 알면
1. 새 빌트인 함수나 모듈을 인터프리터에 추가하기 쉽ㄴ습니다.
2. 혹은 중요한 기능을 최고속도로 수행하거나
3. 파이썬 프로그램을 바이너리 형태로 사용가능한 라이브러리들과 연결하기 쉽습니다.

당신이 파이썬에 제대로 빠지면, 파이썬 인터프리터를 c로 작성된 애플리케션에 연결해서 해당 애플리케이션의 확장이나 커맨드 언어로 사용할 수 있습니다.

그나저나 이 언어는 몬티파이썬의 나르는 서커스라는 이름의 비비씨 쇼를 모티브로 만든거지 파충류랑 관계없음.

"Monty Python 스킷(Monty Python skits)"에 대한 언급은 문서에서 허용될 뿐만 아니라 권장됩니다.

이제 파이썬에 대해 관심이 생겼다면 더 많은 디테일로 재보고싶을겁니다.
가장 배우기 쉬운 방법은 사용하는것이므로, 이 튜토리얼은 읽음과 동시에 파이썬인터프리터를 가지고 놀 수 있도록 당신을 초대합니다.

다음 챕터에서, 인터프리터를 사용하는 메커니즘이 설명될 것이다.
좀 지루하지만, 이후 보여줄 예시들을 시도하는데 필수적이다.

나머지 튜토리얼은 파이썬 언어의 다양한 특징과 시스템을 여러 예시들을 통해 소개할거다.
예시는 쉬운 표현, 상태, 데이터 타입, 모듈과 함수를 통해, 그리고 마지막으로 예외나 사용자 정의 클래스와 같은 고급 컨셉들로 구성됨.

